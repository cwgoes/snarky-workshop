open Extended_lib;

let preimage_length = 256i;

let pad_to_preimage_length = fun(xs) => {
  let n = List.length(xs);
  if (n > preimage_length) {
    failwith("Too big to be a preimage");
  } ;

  if (n < preimage_length) {
    xs @ List.init(preimage_length - n, fun(_) => { false; });
  } else {
    xs;
  };
};

let get_original: unit -> list#256(bool) = fun() => {
  print_endline("Please enter your preimage") ;
  let s = read_line () ;
  pad_to_preimage_length(Blake2.string_to_bool_list(s));
};

let main = fun(expected : field, ()) => {
  let params = load_pedersen_params("bn128-params");
  let original: list#256(boolean) = Prover {
      get_original();
  };

  let actual: field = Pedersen.digest_bits(params, original);
  Field.Assert.equal(expected, actual);
};
